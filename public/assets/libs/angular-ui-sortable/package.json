{
  "name": "angular-ui-sortable",
  "version": "0.13.4",
  "description": "This directive allows you to jQueryUI Sortable.",
  "author": {
    "name": "https://github.com/angular-ui/ui-sortable/graphs/contributors"
  },
  "license": "MIT",
  "homepage": "http://angular-ui.github.com",
  "main": "./src/sortable.js",
  "dependencies": {},
  "devDependencies": {
    "angular-ui-publisher": "1.2.x",
    "grunt": "~0.4.x",
    "grunt-contrib-connect": "0.5.x",
    "grunt-contrib-jshint": "0.8.x",
    "grunt-contrib-uglify": "0.2.x",
    "grunt-contrib-watch": "0.5.x",
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-karma": "0.6.x",
    "grunt-ngmin": "0.0.x",
    "grunt-surround": "0.1.x",
    "karma": "0.10.x",
    "karma-chrome-launcher": "0.1.x",
    "karma-coffee-preprocessor": "0.1.x",
    "karma-coverage": "~0.2.0",
    "karma-coveralls": "~0.1.4",
    "karma-firefox-launcher": "0.1.x",
    "karma-html2js-preprocessor": "0.1.x",
    "karma-jasmine": "0.1.x",
    "karma-junit-reporter": "0.2.x",
    "karma-phantomjs-launcher": "0.1.x",
    "karma-requirejs": "0.2.x",
    "karma-script-launcher": "0.1.x",
    "load-grunt-tasks": "0.2.x",
    "requirejs": "2.1.x",
    "wiredep": "1.8.x"
  },
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-sortable.git"
  },
  "gitHead": "a462388f14e9e4ab7cceb4c4316161824af54b94",
  "readme": "# UI.Sortable directive\r\n[![Build Status](https://travis-ci.org/angular-ui/ui-sortable.svg?branch=master)](https://travis-ci.org/angular-ui/ui-sortable)\r\n[![Coverage Status](https://coveralls.io/repos/angular-ui/ui-sortable/badge.svg?branch=master)](https://coveralls.io/r/angular-ui/ui-sortable?branch=master)\r\n[![debugInfoEnabled(false) Ready Badge](https://rawgit.com/thgreasi/ng-debugInfoDisabled-badges/master/badge1.svg)](https://docs.angularjs.org/guide/production#disabling-debug-data)\r\n[![Join the chat at https://gitter.im/angular-ui/ui-sortable](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/ui-sortable?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nThis directive allows you to sort an array with drag & drop.\r\n\r\n## Requirements\r\n\r\n- JQuery\r\n- JQueryUI 1.9+\r\n- AngularJS v1.2+\r\n\r\n[Single minified cdn link](http://cdn.jsdelivr.net/g/jquery@1,jquery.ui@1.10%28jquery.ui.core.min.js+jquery.ui.widget.min.js+jquery.ui.mouse.min.js+jquery.ui.sortable.min.js%29,angularjs@1.2,angular.ui-sortable) ~245kB and [example](http://codepen.io/thgreasi/pen/olDJi) with JQuery v1.x, required parts of JQueryUI v1.10, AngularJS v1.2 & latest angular-ui-sortable.\r\n\r\n**Notes:**\r\n> * JQuery must be included before AngularJS.  \r\n> * JQueryUI dependecies include [core](http://api.jqueryui.com/category/ui-core/), [widget](http://api.jqueryui.com/jQuery.widget/), [mouse](http://api.jqueryui.com/mouse/) & [sortable](http://api.jqueryui.com/sortable/). Creating a [custom build](http://jqueryui.com/download/#!version=1.10&components=1110000010000000000000000000000000) will [greatly reduce](https://github.com/angular-ui/ui-sortable/issues/154#issuecomment-40279430) the required file size. ([CDN](http://www.jsdelivr.com/) links for comparison: [full](http://cdn.jsdelivr.net/g/jquery.ui@1.10) vs  [minimal](http://cdn.jsdelivr.net/g/jquery.ui@1.10%28jquery.ui.core.min.js+jquery.ui.widget.min.js+jquery.ui.mouse.min.js+jquery.ui.sortable.min.js%29))\r\n> * Users of AngularJS pre v1.2 can use [v0.10.x](https://github.com/angular-ui/ui-sortable/tree/v0.10.x-stable) or [v0.12.x](https://github.com/angular-ui/ui-sortable/tree/v0.12.x-stable) branches.\r\n> * Early adopters of [Angular2](https://angular.io/) can use the  [ng2 branch](https://github.com/angular-ui/ui-sortable/tree/ng2).\r\n\r\n## Installation\r\n\r\n* Install with Bower `bower install -S angular-ui-sortable`\r\n* Install with npm `npm install -S angular-ui-sortable`\r\n* Download one of the [Releases](https://github.com/angular-ui/ui-sortable/releases) or the [latest Master branch](https://github.com/angular-ui/ui-sortable/archive/master.zip)\r\n\r\n## Usage\r\n\r\nLoad the script file: sortable.js in your application:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"modules/directives/sortable/src/sortable.js\"></script>\r\n```\r\n\r\nAdd the sortable module as a dependency to your application module:\r\n\r\n```js\r\nvar myAppModule = angular.module('MyApp', ['ui.sortable'])\r\n```\r\n\r\nApply the directive to your form elements:\r\n\r\n```html\r\n<ul ui-sortable ng-model=\"items\">\r\n  <li ng-repeat=\"item in items\">{{ item }}</li>\r\n</ul>\r\n```\r\n\r\n**Developing Notes:**\r\n\r\n* `ng-model` is required, so that the directive knows which model to update.\r\n* `ui-sortable` element should only contain one `ng-repeat` and not any other elements (above or below).  \r\n  Otherwise the index matching of the generated DOM elements and the `ng-model`'s items will break.  \r\n  **In other words: The items of `ng-model` must match the indexes of the generated DOM elements.**\r\n* [`Filters`](https://docs.angularjs.org/guide/filter) that manipulate the model (like [filter](https://docs.angularjs.org/api/ng/filter/filter), [orderBy](https://docs.angularjs.org/api/ng/filter/orderBy), [limitTo](https://docs.angularjs.org/api/ng/filter/limitTo),...) should be applied in the `controller` instead of the `ng-repeat` (refer to [the provided examples](#examples)).  \r\nThis is the preferred way since it:\r\n  - is performance wise better\r\n  - reduces the chance of code duplication\r\n  - [is suggested by the angularJS team](https://www.youtube.com/watch?feature=player_detailpage&v=ZhfUv0spHCY#t=3048)\r\n  - it does not break the matching of the generated DOM elements and the `ng-model`'s items\r\n* `ui-sortable` lists containing many 'types' of items can be implemented by using dynamic template loading [with ng-include](http://stackoverflow.com/questions/14607879/angularjs-load-dynamic-template-html-within-directive/14621927#14621927) or a [loader directive](https://github.com/thgreasi/tg-dynamic-directive), to determine how each model item should be rendered. Also take a look at the [Tree with dynamic template](http://codepen.io/thgreasi/pen/uyHFC) example.\r\n\r\n### Options\r\n\r\nAll the [jQueryUI Sortable options](http://api.jqueryui.com/sortable/) can be passed through the directive.  \r\nAdditionally, the `ui` argument of the available callbacks gets enriched with some extra properties as specified to the [API.md file](API.md#uiitemsortable-api-documentation).\r\nAny model changes that happen inside the available callbacks, are applied right after the stop event. We are not wrapping callbacks like `start`/`change`/... with `$apply`, in order to minimize the number of digest loops and avoid possible modifications of the model (eg: by watchers) before the drop takes place.\r\n\r\n```js\r\nmyAppModule.controller('MyController', function($scope) {\r\n  $scope.items = [\"One\", \"Two\", \"Three\"];\r\n\r\n  $scope.sortableOptions = {\r\n    update: function(e, ui) { ... },\r\n    axis: 'x'\r\n  };\r\n});\r\n```\r\n\r\n```html\r\n<ul ui-sortable=\"sortableOptions\" ng-model=\"items\">\r\n  <li ng-repeat=\"item in items\">{{ item }}</li>\r\n</ul>\r\n```\r\n\r\nWhen using event callbacks ([start](http://api.jqueryui.com/sortable/#event-start)/[update](http://api.jqueryui.com/sortable/#event-update)/[stop](http://api.jqueryui.com/sortable/#event-stop)...), avoid manipulating DOM elements (especially the one with the ng-repeat attached).\r\nThe suggested pattern is to use callbacks for emmiting events and altering the scope (inside the 'Angular world').\r\n\r\n#### Floating\r\n\r\n**Update**: Issue [~~7498~~](bugs.jqueryui.com/ticket/7498) was resolved in jquery-ui v1.11.4.\r\nCalling `angular.element('ui-sortable').sortable('refresh')` (use a more appropriate selector in your use case)\r\nshould make jquery-ui-sortable recognize the position and orientation of the existing and any new items.\r\nAs a result, since ui-sortable makes a call to `sortable('refresh')` after the sortable items are created by the repeater, it is not any more necessary to use the `ui-floating` property if the orientation of your list is not changing dynamically.  \r\n**TL;DR:** If you are using jquery-ui v1.11.4+ and you are not changing the orientation of your list dynamically, then you probably don't need to use `ui-floating` property.\r\n\r\nTo have a smooth horizontal-list reordering, jquery.ui.sortable needs to detect the orientation of the list.\r\nThis detection takes place during the initialization of the plugin (and some of the checks include: whether the first item is floating left/right or if 'axis' parameter is 'x', etc).\r\nThere is also a [known issue](bugs.jqueryui.com/ticket/7498) about initially empty horizontal lists.\r\n\r\nTo provide a solution/workaround (till jquery.ui.sortable.refresh() also tests the orientation or a more appropriate method is provided), ui-sortable directive provides a `ui-floating` option as an extra to the [jquery.ui.sortable options](http://api.jqueryui.com/sortable/).\r\n\r\n```html\r\n<ul ui-sortable=\"{ 'ui-floating': true }\" ng-model=\"items\">\r\n  <li ng-repeat=\"item in items\">{{ item }}</li>\r\n</ul>\r\n```\r\n\r\n**OR**\r\n\r\n```js\r\n$scope.sortableOptions = {\r\n  'ui-floating': true\r\n};\r\n```\r\n```html\r\n<ul ui-sortable=\"sortableOptions\" ng-model=\"items\">\r\n  <li ng-repeat=\"item in items\">{{ item }}</li>\r\n</ul>\r\n```\r\n\r\n\r\n**ui-floating** (default: undefined)  \r\nType: [Boolean](http://api.jquery.com/Types/#Boolean)/[String](http://api.jquery.com/Types/#String)/`undefined`\r\n*   **undefined**: Relies on jquery.ui to detect the list's orientation.\r\n*   **false**:     Forces jquery.ui.sortable to detect the list as vertical.\r\n*   **true**:      Forces jquery.ui.sortable to detect the list as horizontal.\r\n*   **\"auto\"**:    Detects on each drag `start` if the element is floating or not.\r\n\r\n#### Canceling\r\n\r\nInside the `update` callback, you can check the item that is dragged and cancel the sorting.\r\n\r\n```js\r\n$scope.sortableOptions = {\r\n  update: function(e, ui) {\r\n    if (ui.item.sortable.model == \"can't be moved\") {\r\n      ui.item.sortable.cancel();\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n**Notes:**\r\n* `update` is the appropriate place to cancel a sorting, since it occurs before any model/scope changes but after the DOM position has been updated.\r\nSo `ui.item.scope` and the directive's `ng-model`, are equal to the scope before the drag start.\r\n* To [cancel a sorting between connected lists](https://github.com/angular-ui/ui-sortable/issues/107#issuecomment-33633638), `cancel` should be called inside the `update` callback of the originating list.\r\n\r\n### jQueryUI Sortable Event order\r\n\r\n**Single sortable** [demo](http://codepen.io/thgreasi/pen/KtsFH)\r\n```\r\nstart\r\nactivate\r\n\r\n/* multiple: sort/change/over/out */\r\n\r\nbeforeStop\r\nupdate    <= call cancel() here if needed\r\ndeactivate\r\nstop\r\n```\r\n\r\n**Connected sortables** [demo](http://codepen.io/thgreasi/pen/uIBKb)\r\n\r\n```\r\nlist A: start\r\nlist B: activate\r\nlist A: activate\r\n\r\n/* both lists multiple: sort/change/over/out */\r\nlist A: sort\r\nlist A: change\r\nlist B: change\r\nlist B: over\r\nlist A: sort\r\nlist B: out\r\nlist A: sort\r\n\r\nlist A: beforeStop\r\nlist A: update    <= call cancel() here if needed\r\nlist A: remove\r\nlist B: receive\r\nlist B: update\r\nlist B: deactivate\r\nlist A: deactivate\r\nlist A: stop\r\n```\r\n\r\nFor more details about the events check the [jQueryUI API documentation](http://api.jqueryui.com/sortable/).\r\n\r\n## Examples\r\n\r\n- [Simple Demo](http://codepen.io/thgreasi/pen/jlkhr)\r\n  - [Simple RequireJS Demo](http://codepen.io/thgreasi/pen/bNaxRq)\r\n  - [Simple Touch-Enabled Demo](http://codepen.io/thgreasi/pen/rOevyv) using [jQuery UI Touch Punch](https://github.com/furf/jquery-ui-touch-punch/)\r\n- [Connected Lists](http://codepen.io/thgreasi/pen/uFile)\r\n- [Filtering](http://codepen.io/thgreasi/pen/mzGbq) ([details](https://github.com/angular-ui/ui-sortable/issues/113))\r\n- [Ordering 1](http://codepen.io/thgreasi/pen/iKEHd) & [Ordering 2](http://plnkr.co/edit/XPUzJjdvwE0QWQ6py6mQ?p=preview) ([details](https://github.com/angular-ui/ui-sortable/issues/70))\r\n- [Cloning](http://codepen.io/thgreasi/pen/qmvhG) ([details](https://github.com/angular-ui/ui-sortable/issues/139))\r\n- [Horizontal List](http://codepen.io/thgreasi/pen/wsfjD)\r\n- [Tree with dynamic template](http://codepen.io/thgreasi/pen/uyHFC)\r\n- Canceling\r\n  - [Connected Lists With Max Size](http://codepen.io/thgreasi/pen/IdvFc)\r\n  - [Connected Lists Without Duplicates](http://codepen.io/thgreasi/pen/NPaJyb)\r\n  - [Promised Reverting](http://codepen.io/thgreasi/pen/MwQqdg)\r\n- [Locked Items](http://codepen.io/thgreasi/pen/GgdeEO)\r\n- [Draggable Handle](http://codepen.io/thgreasi/pen/ihAyr)\r\n- [Drop Zone](http://codepen.io/thgreasi/pen/LVXWeO)\r\n- [Draggable-Sortable like interaction](http://codepen.io/thgreasi/pen/LVVJgK)\r\n\r\n## Integrations\r\n- [ui.bootstrap.accordion](http://plnkr.co/edit/TGIeeEbbvJwpJ3WRqo2z?p=preview)\r\n- [Asynchronous loading jQuery+jQueryUI with crisbeto/angular-ui-sortable-loader](https://github.com/crisbeto/angular-ui-sortable-loader)\r\n\r\n## Reporting Issues\r\n\r\nThe [above](#examples) pen's are provided as a good starting point to demonstrate issues, proposals and use cases.\r\nFeel free to edit any of them for your needs (don't forget to also update the libraries used to your version).\r\n\r\n## Testing\r\n\r\nWe use Karma and jshint to ensure the quality of the code.  The easiest way to run these checks is to use grunt:\r\n\r\n```sh\r\nnpm install -g grunt-cli\r\nnpm install && bower install\r\ngrunt\r\n```\r\n\r\nThe karma task will try to open Firefox and Chrome as browser in which to run the tests.  Make sure this is available or change the configuration in `test\\karma.conf.js`\r\n\r\n\r\n### Grunt Serve\r\n\r\nWe have one task to serve them all !\r\n\r\n```sh\r\ngrunt serve\r\n```\r\n\r\nIt's equal to run separately:\r\n\r\n* `grunt connect:server` : giving you a development server at [http://127.0.0.1:8000/](http://127.0.0.1:8000/).\r\n\r\n* `grunt karma:server` : giving you a Karma server to run tests (at [http://localhost:9876/](http://localhost:9876/) by default). You can force a test on this server with `grunt karma:unit:run`.\r\n\r\n* `grunt watch` : will automatically test your code and build your demo.  You can demo generation with `grunt build:gh-pages`.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/angular-ui/ui-sortable/issues"
  },
  "_id": "angular-ui-sortable@0.13.4",
  "_shasum": "8bc4c93eb9a452dabab5d859346344928749d739",
  "_from": "angular-ui-sortable@^0.13.4",
  "_resolved": "https://registry.npmjs.org/angular-ui-sortable/-/angular-ui-sortable-0.13.4.tgz"
}
